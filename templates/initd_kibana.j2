#!/bin/bash
# {{ansible_managed}}
NAME="logstash"
DESC="logstash star-stop script"

RUN_AS_USER="root"
RUN_AS_GROUP="root"
BASE_DIR="{{logstash_install_dir}}"

GREP_NAME="runner.rb web"

ExecFile="{{kibana_bin}}"
ExecArg=""

STOPCMD="kill -9"
#How many sec to wait before checking if proc is up
SLEEP_FOR=5

JAVA_PID() {
    check_java="$(ps aux| grep -e '$GREP_NAME' | grep -v grep | awk '{ print $2 }' )"
    echo $check_java
}
start(){
    PID=$(JAVA_PID)
    if  [ -n "$PID" ] ; then
        echo "$NAME is already running (PID: $PID)"
    else
        if [ "$foreground" == "fg" ]; then
            echo "start foreground"
            $ExecFile $ExecArg
        else
            echo -n  "Starting $NAME "    
            $ExecFile $ExecArg >> {{logstash_log_dir}}/kibana.log 2>&1 &
            [ "$?" -ne 0 ] && echo "[ FAILED ]" && return 1
            let kwait=$SLEEP_FOR
            count=0;
            until [ $count -gt $kwait ]
            do
                echo -n "." 
                sleep 1
                let count=$count+1;
            done
            PID=$(JAVA_PID)
            if [ -n "$PID" ]; then
                echo "[ OK ]" 
                return 0
            else
                echo "[ FAILED ]"
                return 1
            fi
        fi
    fi
} 
 
stop() {
    PID=$(JAVA_PID)
    if [ -n "$PID" ]; then
        echo -n  "Stoping $NAME "
        kill -9 $PID
        [ "$?" -ne 0 ] && echo "[ FAILED ]" && return 1
        
        let kwait=$SLEEP_FOR
        count=0;
        until [ $count -gt $kwait ]
        do
          echo -n ".";
          sleep 1
          let count=$count+1;
        done
        PID=$(JAVA_PID)
        if [ -n "$PID" ]; then
            echo "[ FAILED ]"
            return 1
        else
            echo "[ OK ]"
            return 1
        fi      
    else
        echo "$NAME not running."
    fi
} 
 
status() {
    PID=$(JAVA_PID)
    if [ -n "$PID" ]; then
        echo "$NAME is running with PID:$PID"
    else
        echo "$NAME is not running" 
    fi
}
 
case "$1" in
 start)
        foreground="$2"
        start ;;
 stop)
        stop ;;
 restart)
       stop
       start ;;
 status)
       status ;; 
*)
        echo "Usage: $0 {start|start fg|stop|restart|status}"
        exit 1 ;;
esac
exit 0